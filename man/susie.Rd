% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/susie.R
\name{susie}
\alias{susie}
\title{Bayesian sum of single-effect (susie) linear regression of Y on X}
\usage{
susie(X, Y, L = 10, scaled_prior_variance = 0.2,
  residual_variance = NULL, prior_weights = NULL, null_weight = NULL,
  standardize = TRUE, intercept = TRUE,
  estimate_residual_variance = TRUE, estimate_prior_variance = FALSE,
  s_init = NULL, coverage = 0.95, min_abs_corr = 0.5,
  compute_univariate_zscore = FALSE, max_iter = 100, tol = 0.001,
  verbose = FALSE, track_fit = FALSE)
}
\arguments{
\item{X}{an n by p matrix of covariates}

\item{Y}{an n vector}

\item{L}{maximum number of non-zero effects}

\item{scaled_prior_variance}{the scaled prior variance (vector of length L, or scalar. In latter case gets repeated L times). The prior variance on each non-zero element of b is set to be var(Y)*scaled_prior_variance.}

\item{residual_variance}{the residual variance (defaults to variance of Y)}

\item{prior_weights}{a p vector of prior probability that each element is non-zero}

\item{null_weight}{probability of no effect, for each single effect model}

\item{standardize}{logical flag (default=TRUE) for whether to standardize columns of X to unit variance prior to fitting.
Note that `scaled_prior_variance` specifies the prior on the coefficients of X *after* standardization (if performed).
If you do not standardize you may need
to think more carefully about specifying
`scaled_prior_variance`. Whatever the value of standardize, the coefficients (returned from `coef`) are for X on the original input scale.
Any column of X that has zero variance is not standardized, but left as is.}

\item{intercept}{Should intercept be fitted (default=TRUE) or set to zero (FALSE). The latter is generally not recommended.}

\item{estimate_residual_variance}{indicates whether to estimate residual variance}

\item{estimate_prior_variance}{indicates whether to estimate prior (currently not recommended as not fully tested and assessed)}

\item{s_init}{a previous susie fit with which to initialize}

\item{coverage}{coverage of confident sets. Default to 0.95 for 95\% confidence interval.}

\item{min_abs_corr}{minimum of absolute value of correlation allowed in a confidence set.
Default set to 0.5 to correspond to squared correlation of 0.25,
a commonly used threshold for genotype data in genetics studies.}

\item{compute_univariate_zscore}{if true, outputs z-score from per variable univariate regression}

\item{max_iter}{maximum number of iterations to perform}

\item{tol}{convergence tolerance}

\item{verbose}{if true outputs some progress messages}

\item{track_fit}{add an attribute \code{trace} to output that saves current values of all iterations}
}
\value{
a susie fit, which is a list with some or all of the following elements\cr
\item{alpha}{an L by p matrix of posterior inclusion probabilites}
\item{mu}{an L by p matrix of posterior means (conditional on inclusion)}
\item{mu2}{an L by p matrix of posterior second moments (conditional on inclusion)}
\item{Xr}{an n vector of fitted values, equal to X times colSums(alpha*mu))}
\item{sigma2}{residual variance}
\item{V}{prior variance}
\item{elbo}{a vector of values of elbo achieved (objective function)}
\item{sets}{a list of `cs`, `purity` and selected `cs_index`}
\item{pip}{a vector of posterior inclusion probability}
\item{z}{a vector of univariate z-scores}
}
\description{
Bayesian sum of single-effect (susie) linear regression of Y on X
}
\details{
Performs sum of single-effect (susie) linear regression of Y on X.
That is, this function
fits the regression model Y= sum_l Xb_l + e, where elements of e are iid N(0,residual_variance) and the
sum_l b_l is a p vector of effects to be estimated.
The assumption is that each b_l has exactly one non-zero element, with all elements
equally likely to be non-zero. The prior on the non-zero element is N(0,var=var(Y)*scaled_prior_variance).
}
\examples{
set.seed(1)
n = 1000
p = 1000
beta = rep(0,p)
beta[1:4] = 1
X = matrix(rnorm(n*p),nrow=n,ncol=p)
y = X \%*\% beta + rnorm(n)
res =susie(X,y,L=10)
coef(res)
plot(y,predict(res))

}
